volumes:
  local_postgres_data:
  redis_master:
  redis_slave:

services:
  beastz-api:
    container_name: beastz-api
    build: ./
    ports:
      - '4000:4000'
    environment:
      DEBUG: ${DEBUG}
      PORT: ${PORT}
      PRISMA_ENGINE_PROTOCOL: ${PRISMA_ENGINE_PROTOCOL}
      MAX_FEEDBACK_PER_DAY_COUNT: ${MAX_FEEDBACK_PER_DAY_COUNT}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
      ENABLE_SESSION_ACCESS_JWT_ENCRYPTION: ${ENABLE_SESSION_ACCESS_JWT_ENCRYPTION}
      ADMIN_BASIC_PASSWORD: ${ADMIN_BASIC_PASSWORD}
      ENABLE_MAIL_SANDBOX: ${ENABLE_MAIL_SANDBOX}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_LOG_QUERY: ${DATABASE_LOG_QUERY}
      MAIL_URL: ${MAIL_URL}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      COOKIE_SECRET: ${COOKIE_SECRET}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN}
      ACCESS_TOKEN_EXPIRATION_IN_SEC: ${ACCESS_TOKEN_EXPIRATION_IN_SEC}
      REFRESH_TOKEN_EXPIRATION_IN_SEC: ${REFRESH_TOKEN_EXPIRATION_IN_SEC}
      RECOVER_PASSWORD_REQUEST_TIMEOUT_IN_SEC: ${RECOVER_PASSWORD_REQUEST_TIMEOUT_IN_SEC}
      RESET_PASSWORD_REQUEST_TIMEOUT_IN_SEC: ${RESET_PASSWORD_REQUEST_TIMEOUT_IN_SEC}
      ACCOUNT_VERIFICATION_TOKEN_EXPIRATION_IN_SEC: ${ACCOUNT_VERIFICATION_TOKEN_EXPIRATION_IN_SEC}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      SESSION_JWT_ENCRYPTION_KEY: ${SESSION_JWT_ENCRYPTION_KEY}
      ACCOUNT_VERIFY_TOKEN_SECRET: ${ACCOUNT_VERIFY_TOKEN_SECRET}
      RECOVER_PASSWORD_TOKEN_SECRET: ${RECOVER_PASSWORD_TOKEN_SECRET}
      RESET_PASSWORD_TOKEN_SECRET: ${RESET_PASSWORD_TOKEN_SECRET}

    depends_on:
      - beastz-database
      - redis-master
      - redis-slave
    volumes:
      - /beastz-data/hub:/app/hub
      - /beastz-data/user-bin:/app/user-bin
      - /beastz-data/user-content:/app/user-content
      - /beastz-data/user-upload:/app/user-upload
      - /beastz-data/user-deleted-forever:/app/user-deleted-forever

  beastz-database:
    image: postgres:14.5-alpine
    container_name: beastz-database
    ports:
      - '5433:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - local_postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}']
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 10s
      #! Only in dev mode
      # test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p 5000']

  redis-master:
    image: redis:7.4.0
    container_name: redis-master
    restart: always
    #! Volume will ensure so that if container restarts redis data will not be lost
    volumes:
      - redis_master:/data
    ports:
      - 6379:6379

  redis-slave:
    image: redis:7.4.0
    container_name: redis-slave
    restart: always
    volumes:
      - redis_slave:/data
    ports:
      - 6479:6379
    command: redis-server --slaveof redis-master 6379
